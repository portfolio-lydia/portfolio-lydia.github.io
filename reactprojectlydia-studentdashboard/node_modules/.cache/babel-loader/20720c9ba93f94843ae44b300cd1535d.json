{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from\"react\";import{XYPlot,XAxis,YAxis,HorizontalGridLines,VerticalBarSeries,LineSeries,ChartLabel}from\"react-vis\";var Chart=/*#__PURE__*/function(_Component){_inherits(Chart,_Component);var _super=_createSuper(Chart);function Chart(props){var _this;_classCallCheck(this,Chart);_this=_super.call(this,props);_this.handleChange=function(event){var value=event.target.value;if(value===\"funfactor\"){_this.setState({checked:!_this.state.checked});}else if(value===\"difficulty\"){_this.setState({difficultyChecked:!_this.state.difficultyChecked});}};_this.state={checked:false,difficultyChecked:false};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Chart,[{key:\"render\",value:function render(){// variables die ik voor zowel fun als difficulty nodig heb:\nvar items=this.props.items;var assignments=items.map(function(item){return item.assignment;});var uniqueassignments=_toConsumableArray(new Set(assignments));// functies om fun naar het juiste formaat te krijgen\nvar funNumbersPerAssignment=uniqueassignments.map(function(uniqueassignment){var funFactor=[];items.forEach(function(item){if(item.assignment===uniqueassignment){funFactor.push(parseInt(item.funfactor));}});return funFactor;});var funSum=funNumbersPerAssignment.map(function(funNumbers){return funNumbers.reduce(function(a,b){return a+b;});});var funAverage=funSum.map(function(number){return number/funNumbersPerAssignment[0].length||0;});var funFactorData=funAverage.map(function(y,index){return{x:index,y:y};});var difficultyNumbersPerAssignment=uniqueassignments.map(function(uniqueassignment){var difficulty=[];items.forEach(function(item){if(item.assignment===uniqueassignment){difficulty.push(parseInt(item.difficulty));}});return difficulty;});var difficultySum=difficultyNumbersPerAssignment.map(function(difficultyNumbers){return difficultyNumbers.reduce(function(a,b){return a+b;});});var difficultyAverage=difficultySum.map(function(number){return number/difficultyNumbersPerAssignment[0].length||0;});var difficultyData=difficultyAverage.map(function(y,index){return{x:index,y:y};});var emptyBars=funFactorData.map(function(item){return item={x:item.x,y:0};});var funBars=this.state.checked?/*#__PURE__*/_jsx(VerticalBarSeries,{className:\"funfactor\",color:\"#c99da3\",data:funFactorData}):/*#__PURE__*/_jsx(VerticalBarSeries,{data:emptyBars});var difficultyBars=this.state.difficultyChecked?/*#__PURE__*/_jsx(VerticalBarSeries,{className:\"difficulty\",data:difficultyData}):/*#__PURE__*/_jsx(VerticalBarSeries,{data:emptyBars});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Chart\",children:[/*#__PURE__*/_jsxs(XYPlot,{height:400,width:1350,children:[/*#__PURE__*/_jsx(HorizontalGridLines,{}),funBars,difficultyBars,/*#__PURE__*/_jsx(XAxis,{}),/*#__PURE__*/_jsx(YAxis,{className:\"funfactor\"}),/*#__PURE__*/_jsx(YAxis,{className:\"difficulty\"}),/*#__PURE__*/_jsx(ChartLabel,{text:\"Assignments\",className:\"alt-x-label\",includeMargin:false,xPercent:0.025,yPercent:1.01}),/*#__PURE__*/_jsx(ChartLabel,{text:\"Funfactor & difficulty\",className:\"alt-y-label\",includeMargin:false,xPercent:0.06,yPercent:0.06,style:{transform:\"rotate(-90)\",textAnchor:\"end\"}})]}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"funcheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:this.handleChange,id:\"fun\",type:\"checkbox\",name:\"data\",value:\"funfactor\"}),\" \",\"Funfactor per assignment\"]}),/*#__PURE__*/_jsxs(\"label\",{className:\"difficultycheckbox\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:this.handleChange,id:\"difficulty\",type:\"checkbox\",name:\"data\",value:\"difficulty\"}),\" \",\"Difficulty per assignment\"]})]})]}),/*#__PURE__*/_jsxs(XYPlot,{height:400,width:1350,children:[/*#__PURE__*/_jsx(HorizontalGridLines,{}),/*#__PURE__*/_jsx(LineSeries,{color:\"#c99da3\",data:funFactorData}),/*#__PURE__*/_jsx(LineSeries,{data:difficultyData}),/*#__PURE__*/_jsx(XAxis,{}),/*#__PURE__*/_jsx(YAxis,{className:\"funfactor\"}),/*#__PURE__*/_jsx(YAxis,{className:\"difficulty\"})]})]});}}]);return Chart;}(Component);export default Chart;","map":{"version":3,"sources":["C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/src/views/Chart.js"],"names":["React","Component","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalBarSeries","LineSeries","ChartLabel","Chart","props","handleChange","event","value","target","setState","checked","state","difficultyChecked","bind","items","assignments","map","item","assignment","uniqueassignments","Set","funNumbersPerAssignment","uniqueassignment","funFactor","forEach","push","parseInt","funfactor","funSum","funNumbers","reduce","a","b","funAverage","number","length","funFactorData","y","index","x","difficultyNumbersPerAssignment","difficulty","difficultySum","difficultyNumbers","difficultyAverage","difficultyData","emptyBars","funBars","difficultyBars","transform","textAnchor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  LineSeries,\r\n  ChartLabel,\r\n} from \"react-vis\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { checked: false, difficultyChecked: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value === \"funfactor\") {\r\n      this.setState({\r\n        checked: !this.state.checked,\r\n      });\r\n    } else if (value === \"difficulty\") {\r\n      this.setState({ difficultyChecked: !this.state.difficultyChecked });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // variables die ik voor zowel fun als difficulty nodig heb:\r\n    const { items } = this.props;\r\n    const assignments = items.map((item) => item.assignment);\r\n    const uniqueassignments = [...new Set(assignments)];\r\n    // functies om fun naar het juiste formaat te krijgen\r\n    const funNumbersPerAssignment = uniqueassignments.map(\r\n      (uniqueassignment) => {\r\n        const funFactor = [];\r\n        items.forEach((item) => {\r\n          if (item.assignment === uniqueassignment) {\r\n            funFactor.push(parseInt(item.funfactor));\r\n          }\r\n        });\r\n        return funFactor;\r\n      }\r\n    );\r\n    const funSum = funNumbersPerAssignment.map((funNumbers) =>\r\n      funNumbers.reduce((a, b) => a + b)\r\n    );\r\n    const funAverage = funSum.map(\r\n      (number) => number / funNumbersPerAssignment[0].length || 0\r\n    );\r\n\r\n    const funFactorData = funAverage.map((y, index) => {\r\n      return { x: index, y };\r\n    });\r\n\r\n    const difficultyNumbersPerAssignment = uniqueassignments.map(\r\n      (uniqueassignment) => {\r\n        const difficulty = [];\r\n        items.forEach((item) => {\r\n          if (item.assignment === uniqueassignment) {\r\n            difficulty.push(parseInt(item.difficulty));\r\n          }\r\n        });\r\n        return difficulty;\r\n      }\r\n    );\r\n\r\n    const difficultySum = difficultyNumbersPerAssignment.map(\r\n      (difficultyNumbers) => difficultyNumbers.reduce((a, b) => a + b)\r\n    );\r\n    const difficultyAverage = difficultySum.map(\r\n      (number) => number / difficultyNumbersPerAssignment[0].length || 0\r\n    );\r\n\r\n    const difficultyData = difficultyAverage.map((y, index) => {\r\n      return { x: index, y };\r\n    });\r\n\r\n    const emptyBars = funFactorData.map((item) => (item = { x: item.x, y: 0 }));\r\n\r\n    const funBars = this.state.checked ? (\r\n      <VerticalBarSeries\r\n        className=\"funfactor\"\r\n        color=\"#c99da3\"\r\n        data={funFactorData}\r\n      />\r\n    ) : (\r\n      <VerticalBarSeries data={emptyBars} />\r\n    );\r\n\r\n    const difficultyBars = this.state.difficultyChecked ? (\r\n      <VerticalBarSeries className=\"difficulty\" data={difficultyData} />\r\n    ) : (\r\n      <VerticalBarSeries data={emptyBars} />\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"Chart\">\r\n          <XYPlot height={400} width={1350}>\r\n            <HorizontalGridLines />\r\n            {funBars}\r\n            {difficultyBars}\r\n            <XAxis />\r\n            <YAxis className=\"funfactor\" />\r\n            <YAxis className=\"difficulty\" />\r\n            <ChartLabel\r\n              text=\"Assignments\"\r\n              className=\"alt-x-label\"\r\n              includeMargin={false}\r\n              xPercent={0.025}\r\n              yPercent={1.01}\r\n            />\r\n\r\n            <ChartLabel\r\n              text=\"Funfactor & difficulty\"\r\n              className=\"alt-y-label\"\r\n              includeMargin={false}\r\n              xPercent={0.06}\r\n              yPercent={0.06}\r\n              style={{\r\n                transform: \"rotate(-90)\",\r\n                textAnchor: \"end\",\r\n              }}\r\n            />\r\n          </XYPlot>\r\n\r\n          <form>\r\n            <label className=\"funcheckbox\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"fun\"\r\n                type=\"checkbox\"\r\n                name=\"data\"\r\n                value=\"funfactor\"\r\n              />{\" \"}\r\n              Funfactor per assignment\r\n            </label>\r\n            <label className=\"difficultycheckbox\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"difficulty\"\r\n                type=\"checkbox\"\r\n                name=\"data\"\r\n                value=\"difficulty\"\r\n              />{\" \"}\r\n              Difficulty per assignment\r\n            </label>\r\n          </form>\r\n        </div>\r\n        <XYPlot height={400} width={1350}>\r\n          <HorizontalGridLines />\r\n          <LineSeries color=\"#c99da3\" data={funFactorData}></LineSeries>\r\n          <LineSeries data={difficultyData}></LineSeries>\r\n          <XAxis />\r\n          <YAxis className=\"funfactor\" />\r\n          <YAxis className=\"difficulty\" />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}
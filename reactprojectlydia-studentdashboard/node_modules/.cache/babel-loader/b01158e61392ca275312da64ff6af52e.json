{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lydia van Gammeren\\\\Documents\\\\Winc Academy Front-end Opleiding\\\\WincAcademy_Front-end_alle_opdrachten\\\\reactprojectlydia-studentdashboard\\\\src\\\\views\\\\DashBoard.js\";\n// Dashboard Overview User-story: Als gebruiker wil ik als ik de homepage van de applicatie\n// open een overzicht zien in de vorm van een staafdiagram van de evaluaties (leuk & moeilijk)\n// van alle studenten.\n// Als gebruiker moet ik in 1 oogopslag onderscheid kunnen maken tussen de opdrachten en de leuk/moeilijk evaluatie.\n// Zorg ervoor dat er visueel een duidelijk onderscheid wordt gemaakt,\n// door bijvoorbeeld met duidelijke kleuren te werken.\n// Zie het voorbeeld met rood en geel hieronder.\n// Optie 1: Als gebruiker wil ik dmv een checkbox kunnen aangeven of ik\n//  in de staafdiagram alléén wil laten zien hoe leuk de opdracht was,\n//  alléén wil zien hoe moeilijk de opdracht was, of beide.\n// Per student aparte routing (zie ook Student.js)\n// Als gebruiker wil ik een lijst zien van de namen van alle studenten\n// en op een van deze studenten kunnen klikken.\n//  Wanneer ik op een student-naam klik word ik naar de route /{naam-van-student} gebracht.\nimport React from \"react\";\nimport studentdata from \"../utils/studentdata\";\nimport StudentList from \"./StudentList\";\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: studentdata\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StudentList, {\n        items: this.state.students\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DashBoard;","map":{"version":3,"sources":["C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/src/views/DashBoard.js"],"names":["React","studentdata","StudentList","DashBoard","Component","constructor","props","state","students","render"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEP;AADC,KAAb;AAGD;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BAEE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAfqC;;AAkBxC,eAAeL,SAAf","sourcesContent":["// Dashboard Overview User-story: Als gebruiker wil ik als ik de homepage van de applicatie\r\n// open een overzicht zien in de vorm van een staafdiagram van de evaluaties (leuk & moeilijk)\r\n// van alle studenten.\r\n// Als gebruiker moet ik in 1 oogopslag onderscheid kunnen maken tussen de opdrachten en de leuk/moeilijk evaluatie.\r\n// Zorg ervoor dat er visueel een duidelijk onderscheid wordt gemaakt,\r\n// door bijvoorbeeld met duidelijke kleuren te werken.\r\n// Zie het voorbeeld met rood en geel hieronder.\r\n\r\n// Optie 1: Als gebruiker wil ik dmv een checkbox kunnen aangeven of ik\r\n//  in de staafdiagram alléén wil laten zien hoe leuk de opdracht was,\r\n//  alléén wil zien hoe moeilijk de opdracht was, of beide.\r\n\r\n// Per student aparte routing (zie ook Student.js)\r\n// Als gebruiker wil ik een lijst zien van de namen van alle studenten\r\n// en op een van deze studenten kunnen klikken.\r\n//  Wanneer ik op een student-naam klik word ik naar de route /{naam-van-student} gebracht.\r\nimport React from \"react\";\r\nimport studentdata from \"../utils/studentdata\";\r\nimport StudentList from \"./StudentList\";\r\n\r\nclass DashBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      students: studentdata,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <StudentList items={this.state.students}></StudentList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lydia van Gammeren\\\\Documents\\\\Winc Academy Front-end Opleiding\\\\WincAcademy_Front-end_alle_opdrachten\\\\reactprojectlydia-studentdashboard\\\\src\\\\views\\\\Chart.js\";\nimport React, { Component } from \"react\";\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalBarSeries, ChartLabel } from \"react-vis\";\n\nclass Chart extends Component {\n  render() {\n    const {\n      items\n    } = this.props;\n    const assignments = items.map(item => item.assignment);\n    const uniqueassignments = [...new Set(assignments)];\n    const funNumbersPerAssignment = uniqueassignments.map(uniqueassignment => {\n      const funFactor = [];\n      items.forEach(item => {\n        if (item.assignment === uniqueassignment) {\n          funFactor.push(parseInt(item.funfactor));\n        }\n      });\n      return funFactor;\n    });\n    console.log(funNumbersPerAssignment);\n    const funSum = funNumbersPerAssignment.map(funNumbers => funNumbers.reduce((a, b) => a + b));\n    const funAverage = funSum.map(number => number / funNumbersPerAssignment[0].length || 0);\n    console.log(funSum);\n    console.log(funAverage);\n    const xyFunFactorAverage = funAverage.map((y, index) => {\n      return {\n        x: index,\n        y\n      };\n    });\n    console.log(xyFunFactorAverage); // const funData = xyFunFactorAverage;\n\n    const funData = [{\n      x: 0,\n      y: 2 + 4\n    }, {\n      x: 1,\n      y: 4\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 4\n    }];\n    const difficultydata = [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }, {\n      x: 2,\n      y: 2\n    }, {\n      x: 3,\n      y: 1\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chart\",\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 400,\n        width: 800,\n        children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          data: fundata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          data: difficultydata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartLabel, {\n          text: \"Assignments\",\n          className: \"alt-x-label\",\n          includeMargin: false,\n          xPercent: 0.025,\n          yPercent: 1.01\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartLabel, {\n          text: \"Funfactor & difficulty\",\n          className: \"alt-y-label\",\n          includeMargin: false,\n          xPercent: 0.06,\n          yPercent: 0.06,\n          style: {\n            transform: \"rotate(-90)\",\n            textAnchor: \"end\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Lydia van Gammeren/Documents/Winc Academy Front-end Opleiding/WincAcademy_Front-end_alle_opdrachten/reactprojectlydia-studentdashboard/src/views/Chart.js"],"names":["React","Component","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalBarSeries","ChartLabel","Chart","render","items","props","assignments","map","item","assignment","uniqueassignments","Set","funNumbersPerAssignment","uniqueassignment","funFactor","forEach","push","parseInt","funfactor","console","log","funSum","funNumbers","reduce","a","b","funAverage","number","length","xyFunFactorAverage","y","index","x","funData","difficultydata","fundata","transform","textAnchor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  ChartLabel,\r\n} from \"react-vis\";\r\n\r\nclass Chart extends Component {\r\n  render() {\r\n    const { items } = this.props;\r\n    const assignments = items.map((item) => item.assignment);\r\n    const uniqueassignments = [...new Set(assignments)];\r\n    const funNumbersPerAssignment = uniqueassignments.map(\r\n      (uniqueassignment) => {\r\n        const funFactor = [];\r\n        items.forEach((item) => {\r\n          if (item.assignment === uniqueassignment) {\r\n            funFactor.push(parseInt(item.funfactor));\r\n          }\r\n        });\r\n        return funFactor;\r\n      }\r\n    );\r\n    console.log(funNumbersPerAssignment);\r\n    const funSum = funNumbersPerAssignment.map((funNumbers) =>\r\n      funNumbers.reduce((a, b) => a + b)\r\n    );\r\n    const funAverage = funSum.map(\r\n      (number) => number / funNumbersPerAssignment[0].length || 0\r\n    );\r\n    console.log(funSum);\r\n    console.log(funAverage);\r\n    const xyFunFactorAverage = funAverage.map((y, index) => {\r\n      return { x: index, y };\r\n    });\r\n    console.log(xyFunFactorAverage);\r\n\r\n    // const funData = xyFunFactorAverage;\r\n     const funData = [{x: 0, y: 2 + 4}, {x: 1, y: 4}, {x: 2, y: 4}, {x: 3, y: 4}]\r\n     const difficultydata = [{x: 0, y: 5}, {x: 1, y: 3}, {x: 2, y: 2}, {x: 3, y: 1}]\r\n    return (\r\n      <div className=\"Chart\">\r\n        <XYPlot height={400} width={800}>\r\n          <HorizontalGridLines />\r\n          <VerticalBarSeries data={fundata} />\r\n          <VerticalBarSeries data={difficultydata} />\r\n          <XAxis />\r\n          <YAxis />\r\n          <YAxis />\r\n          <ChartLabel\r\n            text=\"Assignments\"\r\n            className=\"alt-x-label\"\r\n            includeMargin={false}\r\n            xPercent={0.025}\r\n            yPercent={1.01}\r\n          />\r\n\r\n          <ChartLabel\r\n            text=\"Funfactor & difficulty\"\r\n            className=\"alt-y-label\"\r\n            includeMargin={false}\r\n            xPercent={0.06}\r\n            yPercent={0.06}\r\n            style={{\r\n              transform: \"rotate(-90)\",\r\n              textAnchor: \"end\",\r\n            }}\r\n          />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}